[
 {
  "allow_guest": 0,
  "api_method": "insert_barcode",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": null,
  "modified": "2022-01-11 17:59:44.215397",
  "name": "insert_item_barcode",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "item_code=frappe.form_dict.get(\"item_code\")\ndocval=frappe.db.get_value(\"Item Barcode\",{\"parent\":item_code,\"parenttype\":\"Item\",\"barcode\":item_code},\"barcode\")\nif not docval:\n    doc = frappe.get_doc('Item',item_code )\n    doc.append('barcodes', {\n    'barcode': item_code,\n    'system_generated_barcode': 1\n    })\n    doc.save()\n    frappe.response['message']=doc\nelse:\n    frappe.response['message'] = \"barcode not inserted\"",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Submit",
  "event_frequency": null,
  "modified": "2022-01-11 18:00:01.641070",
  "name": "send_mail_for_order_qty",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Sales Order",
  "script": "warehouse_list=[]\nfor item in doc.items:\n    if item.warehouse not in warehouse_list:\n        warehouse_list.append(item.warehouse)\nsend_email_flag=False\n\nfor warehouse in warehouse_list:\n    warehouse_manager_user=frappe.db.get_value('Warehouse',{'name':warehouse},'warehouse_manager')\n    if warehouse_manager_user:\n        email_address=frappe.db.get_value('User',{'name':warehouse_manager_user},'email')\n        first_name=frappe.db.get_value('User',{'name':warehouse_manager_user},'first_name')\n        item_list=frappe.db.get_list('Sales Order Item',\n        filters={\n            'parent':doc.name,\n            'warehouse':warehouse\n        },\n        fields=['item_name','name']\n        )\n        if item_list:\n            content1=\"Dear \"+first_name+\",\"+\"<br>\"+\"<br>\"+\"This is to inform you that the Ordered Quantity for \"\n            for items in item_list:\n                item_doc=frappe.get_doc('Sales Order Item',items.name) \n                if item_doc:\n                    if item_doc.qty>=item_doc.actual_qty:\n                        content1=content1+\"<b>\"+ items.item_name+\"</b>\"+\",\"\n                        send_email_flag=True\n            if send_email_flag==True:\n                frappe.sendmail(recipients=email_address,\n            \t\tsubject=\"Stock Availability Notification\",\n            \t\tmessage= content1+\" is more than the available quantity at \"+\"<b>\"+warehouse+\"</b>\"+\". Please follow with the team to avoid any shortage. \"+\"<br>\"+\"<br>\"+\n            \"Thanks and Regards,\"+\"<br>\"+\"<b>\"+\n        doc.company+\"</b>\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Submit",
  "event_frequency": null,
  "modified": "2022-01-11 18:00:08.805006",
  "name": "send_email_to_warehouse_manager",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Sales Order",
  "script": "warehouse_list=[]\nfor item in doc.items:\n    if item.warehouse not in warehouse_list:\n        warehouse_list.append(item.warehouse)\n        \n        \nfor warehouse in warehouse_list:\n        warehouse_manager_user=frappe.db.get_value('Warehouse',{'name':warehouse},'warehouse_manager')\n        if warehouse_manager_user:\n            email_address=frappe.db.get_value('User',{'name':warehouse_manager_user},'email')\n            first_name=frappe.db.get_value('User',{'name':warehouse_manager_user},'first_name')\n            my_attachments = [frappe.attach_print(doc.doctype, doc.name, file_name=doc.name)]\n            frappe.sendmail(recipients=email_address,\n                \t\tsubject=\"Sales Order -\"+doc.name+\" Confirmation notice\",\n                \t\tmessage= \"Dear \"+first_name+\",\"+\"<br>\"+\"<br>\"+\n                \t\t\" This message is to let you know that the following items have been ordered by the customer <b>\"+doc.customer+\"</b>.The details of the order have been enclosed within this mail for your reference.Order Number: <b>\"+doc.name+\"</b>.\"+\n                \t\t\"<br>\"+\"<br>\"+\n                \"Thanks and Regards,\"+\"<br>\"+\"<b>\"+\n                doc.company+\"</b>\",\n                reference_doctype=doc.doctype,\n            \treference_name=doc.name,\n            \tattachments=my_attachments)",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Submit",
  "event_frequency": null,
  "modified": "2022-01-11 18:00:17.399773",
  "name": "Stock Reconciliation Before Submit",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Stock Reconciliation",
  "script": "if doc.purpose==\"Opening Stock\":\n    for items in frappe.db.get_list(\"Stock Reconciliation Item\",filters={\"parenttype\":\"Stock Reconciliation\",\"parent\":doc.name},fields={\"item_code\"}):\n        docval=frappe.db.get_value(\"Item Barcode\",{\"parent\":items.item_code,\"parenttype\":\"Item\",\"barcode\":items.item_code},\"barcode\")\n        if not docval:\n            item_doc = frappe.get_doc('Item',items.item_code )\n            item_doc.append('barcodes', {\n            'barcode': items.item_code,\n            'system_generated_barcode': 1\n            })\n            item_doc.save()",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Submit",
  "event_frequency": null,
  "modified": "2022-01-11 18:00:25.621304",
  "name": "Stock Entry Before Submit",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Stock Entry",
  "script": "if doc.stock_entry_type==\"Material Receipt\":\n    for items in frappe.db.get_list(\"Stock Entry Detail\",filters={\"parenttype\":\"Stock Entry\",\"parent\":doc.name},fields={\"item_code\"}):\n        docval=frappe.db.get_value(\"Item Barcode\",{\"parent\":items.item_code,\"parenttype\":\"Item\",\"barcode\":items.item_code},\"barcode\")\n        if not docval:\n            item_doc = frappe.get_doc('Item',items.item_code )\n            item_doc.append('barcodes', {\n            'barcode': items.item_code,\n            'system_generated_barcode': 1\n            })\n            item_doc.save()",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": null,
  "modified": "2022-01-11 18:00:33.042936",
  "name": "add_financial_year_to_payment_request",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Payment Request",
  "script": "doc.financial_year = frappe.db.get_value(\"Fiscal Year\",{\"disabled\":0,\"year_start_date\":[\"<=\",frappe.utils.getdate()],\"year_end_date\":[\">=\",frappe.utils.getdate()]},\"year\")\ndoc.branch_abbr = frappe.db.get_value(\"Branch\",{\"name\":doc.branch},\"abbr\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": null,
  "modified": "2022-01-11 18:00:47.932571",
  "name": "add_financial_year_to_stock_entry",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Stock Entry",
  "script": "doc.financial_year = frappe.db.get_value(\"Fiscal Year\",{\"disabled\":0,\"year_start_date\":[\"<=\",frappe.utils.getdate()],\"year_end_date\":[\">=\",frappe.utils.getdate()]},\"year\")\ndoc.branch_abbr = frappe.db.get_value(\"Branch\",{\"name\":doc.branch},\"abbr\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": null,
  "modified": "2022-01-11 18:00:55.292399",
  "name": "add_financial_year_to_payment_entry",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Payment Entry",
  "script": "doc.financial_year = frappe.db.get_value(\"Fiscal Year\",{\"disabled\":0,\"year_start_date\":[\"<=\",frappe.utils.getdate()],\"year_end_date\":[\">=\",frappe.utils.getdate()]},\"year\")\ndoc.branch_abbr = frappe.db.get_value(\"Branch\",{\"name\":doc.branch},\"abbr\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": null,
  "modified": "2022-01-11 18:01:03.487949",
  "name": "add_financial_year_to_payment_order",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Payment Order",
  "script": "doc.financial_year = frappe.db.get_value(\"Fiscal Year\",{\"disabled\":0,\"year_start_date\":[\"<=\",frappe.utils.getdate()],\"year_end_date\":[\">=\",frappe.utils.getdate()]},\"year\")\ndoc.branch_abbr = frappe.db.get_value(\"Branch\",{\"name\":doc.branch},\"abbr\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": null,
  "modified": "2022-01-11 18:01:11.446485",
  "name": "add_financial_year_to_purchase_receipt",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Purchase Receipt",
  "script": "doc.financial_year = frappe.db.get_value(\"Fiscal Year\",{\"disabled\":0,\"year_start_date\":[\"<=\",frappe.utils.getdate()],\"year_end_date\":[\">=\",frappe.utils.getdate()]},\"year\")\ndoc.branch_abbr = frappe.db.get_value(\"Branch\",{\"name\":doc.branch},\"abbr\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": null,
  "modified": "2022-01-11 18:01:20.276295",
  "name": "add_financial_year_to_purchase_invoice",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Purchase Invoice",
  "script": "doc.financial_year = frappe.db.get_value(\"Fiscal Year\",{\"disabled\":0,\"year_start_date\":[\"<=\",frappe.utils.getdate()],\"year_end_date\":[\">=\",frappe.utils.getdate()]},\"year\")\ndoc.branch_abbr = frappe.db.get_value(\"Branch\",{\"name\":doc.branch},\"abbr\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": null,
  "modified": "2022-01-11 18:01:28.304817",
  "name": "add_financial_year_to_pick_list",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Pick List",
  "script": "doc.financial_year = frappe.db.get_value(\"Fiscal Year\",{\"disabled\":0,\"year_start_date\":[\"<=\",frappe.utils.getdate()],\"year_end_date\":[\">=\",frappe.utils.getdate()]},\"year\")\ndoc.branch_abbr = frappe.db.get_value(\"Branch\",{\"name\":doc.branch},\"abbr\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": null,
  "modified": "2022-01-11 18:01:36.580676",
  "name": "add_financial_year_to_packing_slip",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Packing Slip",
  "script": "doc.financial_year = frappe.db.get_value(\"Fiscal Year\",{\"disabled\":0,\"year_start_date\":[\"<=\",frappe.utils.getdate()],\"year_end_date\":[\">=\",frappe.utils.getdate()]},\"year\")\ndoc.branch_abbr = frappe.db.get_value(\"Branch\",{\"name\":doc.branch},\"abbr\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": null,
  "modified": "2022-01-11 18:01:44.122702",
  "name": "add_financial_year_to_delivery_note",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Delivery Note",
  "script": "doc.financial_year = frappe.db.get_value(\"Fiscal Year\",{\"disabled\":0,\"year_start_date\":[\"<=\",frappe.utils.getdate()],\"year_end_date\":[\">=\",frappe.utils.getdate()]},\"year\")\ndoc.branch_abbr = frappe.db.get_value(\"Branch\",{\"name\":doc.branch},\"abbr\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": null,
  "modified": "2022-06-14 12:19:34.764772",
  "name": "add_financial_year_to_material_request",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Material Request",
  "script": "doc.financial_year = frappe.db.get_value(\"Fiscal Year\",{\"disabled\":0,\"year_start_date\":[\"<=\",frappe.utils.getdate()],\"year_end_date\":[\">=\",frappe.utils.getdate()]},\"year\")\ndoc.branch_abbr = frappe.db.get_value(\"Branch\",{\"name\":doc.branch},\"abbr\")\n\nfor row in doc.items:\n    if row.production_plan:\n        row.project = frappe.db.get_value(\"Production Plan\",{'name':row.production_plan},'project')\n        doc.project = row.project",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": null,
  "modified": "2022-01-11 18:01:57.762069",
  "name": "add_financial_year_to_pos_invoice",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "POS Invoice",
  "script": "doc.financial_year = frappe.db.get_value(\"Fiscal Year\",{\"disabled\":0,\"year_start_date\":[\"<=\",frappe.utils.getdate()],\"year_end_date\":[\">=\",frappe.utils.getdate()]},\"year\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": null,
  "modified": "2022-01-11 18:02:06.555106",
  "name": "add_financial_year_to_stock_reconciliation",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Stock Reconciliation",
  "script": "doc.financial_year = frappe.db.get_value(\"Fiscal Year\",{\"disabled\":0,\"year_start_date\":[\"<=\",frappe.utils.getdate()],\"year_end_date\":[\">=\",frappe.utils.getdate()]},\"year\")\ndoc.branch_abbr = frappe.db.get_value(\"Branch\",{\"name\":doc.branch},\"abbr\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": null,
  "modified": "2022-01-11 18:02:13.909455",
  "name": "add_financial_year_to_sales_order",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Sales Order",
  "script": "doc.financial_year = frappe.db.get_value(\"Fiscal Year\",{\"disabled\":0,\"year_start_date\":[\"<=\",frappe.utils.getdate()],\"year_end_date\":[\">=\",frappe.utils.getdate()]},\"year\")\ndoc.branch_abbr = frappe.db.get_value(\"Branch\",{\"name\":doc.branch},\"abbr\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Save",
  "event_frequency": "All",
  "modified": "2022-01-11 17:59:28.637820",
  "name": "send_email_to_purchase_manager_from_stock_entry",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Stock Entry",
  "script": "count = 0\nfor row in doc.items:\n    if row.t_warehouse:\n        count =count+1\nif doc.stock_entry_type == \"Manufacture\" and doc.inspection_required == 1 and count > 0:\n    def send_email_to_all_quality_manager(doc,email_template):\n        quality_manager_list=frappe.db.sql(\"\"\"select u.name,u.full_name as user_name\n        \t\tfrom `tabUser` u,`tabHas Role` r where\n        \t\tu.name=r.parent and u.enabled = 1 and r.role=\"Quality Manager\" \"\"\",as_dict=True)\n        if quality_manager_list:\n            for row in  quality_manager_list:\n                if row.name != \"Administrator\":\n                    frappe.sendmail(recipients=row.name,\n                    subject=email_template.subject,\n                    message=frappe.render_template(email_template.response_html, {'items': doc.items,'work_order':doc.work_order,\"quality_manager\":row.user_name}),\n                            reference_doctype=doc.doctype,\n                            reference_name=doc.name)\n                        \n    email_template = frappe.get_doc('Email Template','In house QC Template')\n    \n    field_name=frappe.db.sql(\"\"\"SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS where TABLE_NAME=%s  and COLUMN_NAME=%s;\"\"\",('tabStock Entry','branch'),as_list=True)\n    if not field_name:\n        send_email_to_all_quality_manager(doc,email_template)\n    else:\n        if doc.branch!=None:\n            quality_manager_list=frappe.db.sql(\"\"\"select u.name,u.full_name as user_name from  `tabHas Role` r\n        \t\t\tRIGHT JOIN `tabUser` u\n        \t\t\ton u.name=r.parent\n        \t\t \tLEFT JOIN `tabBranch Details` b on\n        \t\t\tu.name=b.parent where b.branch= %(branch)s and r.role=\"Quality Manager\" and u.enabled = 1 \"\"\",{'branch':doc.branch},as_dict=True)\n            if quality_manager_list:\n                for row in  quality_manager_list:\n                    if row.name != \"Administrator\":\n                        frappe.sendmail(recipients=row.name,\n                        subject=email_template.subject,\n                        message=frappe.render_template(email_template.response_html, {'items': doc.items,'work_order':doc.work_order,\"quality_manager\":row.user_name}),\n                            reference_doctype=doc.doctype,\n                            reference_name=doc.name)\n        \n        else:\n            send_email_to_all_quality_manager(doc,email_template)",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Submit",
  "event_frequency": "All",
  "modified": "2022-01-11 17:59:36.651635",
  "name": "send_email_to_warehouse_manager_for_purchase_receipt",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Purchase Receipt",
  "script": "email_template = frappe.get_doc('Email Template','Purchase Receipt Template')\nwarehouse_manager_user=frappe.db.get_value('Warehouse',{'name':doc.set_warehouse},'warehouse_manager')\nsubmitted_by=frappe.db.get_value(\"User\",{\"name\":frappe.session.user},\"full_name\")\nif warehouse_manager_user:\n    email_address=frappe.db.get_value('User',{'name':warehouse_manager_user},'email')\n    user_name=frappe.db.get_value('User',{'name':warehouse_manager_user},'first_name')\n    frappe.sendmail(recipients=email_address,\n        subject=\"Purchase Receipt is Submitted Successfully\",\n        message=frappe.render_template(email_template.response_html, {'items':doc.items,'name':doc.name,'user_name':user_name,'purchase_order':doc.purchase_order,'submitted_by':submitted_by}),\n                reference_doctype=doc.doctype,\n                reference_name=doc.name)",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": null,
  "modified": "2022-01-11 17:59:52.515132",
  "name": "item_codification",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Item",
  "script": "if doc.variant_of and doc.is_finished_product == 1 and doc.fabric_or_yarn != 1:\n    if doc.updated_item == 0:\n        att_abbr= \"\"\n        for attribute_list in doc.attributes:\n            abbr=frappe.db.get_value(\"Item Attribute Value\",{\"parent\":attribute_list.attribute,\"attribute_value\":attribute_list.attribute_value,\"parenttype\":\"Item Attribute\"},\"abbr\")\n            if(\"colour\" in attribute_list.attribute.lower() or \"color\" in attribute_list.attribute.lower()):\n                color_abbr=abbr\n            elif(\"size\" in attribute_list.attribute.lower()):\n                size_abbr=abbr\n            else:\n                att_abbr = att_abbr+\"-\"+str(abbr)\n        if att_abbr:\n            res = str(doc.variant_of)+str(color_abbr)+\"-\"+str(size_abbr)+att_abbr\n        else:\n            res = str(doc.variant_of)+str(color_abbr)+\"-\"+str(size_abbr)\n        doc.item_code=res\n        doc.updated_item = 1\n        \nintermediate_product = 0  \ncountry_code_count = 0\nif doc.variant_of:\n    intermediate_product = frappe.db.get_value(\"Item\",{\"name\":doc.variant_of},\"intermediate_product\")\nif doc.variant_of and doc.is_finished_product == 0 and intermediate_product == 1 and doc.fabric_or_yarn != 1:\n    if doc.updated_item == 0:\n        for attribute_list in doc.attributes:\n            abbr=frappe.db.get_value(\"Item Attribute Value\",{\"parent\":attribute_list.attribute,\"attribute_value\":attribute_list.attribute_value,\"parenttype\":\"Item Attribute\"},\"abbr\")\n            if(\"colour\" in attribute_list.attribute.lower() or \"color\" in attribute_list.attribute.lower()):\n                color_abbr=abbr\n            elif(\"size\" in attribute_list.attribute.lower()):\n                size_abbr=abbr\n            elif(\"stage\" in attribute_list.attribute.lower()):\n                stage_abbr=abbr\n            elif(\"country code\" in attribute_list.attribute.lower()):\n                country_code_abbr = abbr\n                country_code_count = 1\n                \n        if country_code_count == 1 :\n            res = str(doc.variant_of)+str(color_abbr)+\"-\"+str(size_abbr)+\"-\"+str(country_code_abbr)+\"-\"+str(stage_abbr)\n        else:\n            res = str(doc.variant_of)+str(color_abbr)+\"-\"+str(size_abbr)+\"-\"+str(stage_abbr)\n            \n        doc.item_code=res\n        doc.updated_item = 1\n        \nif doc.variant_of and doc.fabric_or_yarn == 1:\n    if doc.updated_item == 0:\n        for attribute_list in doc.attributes:\n            abbr=frappe.db.get_value(\"Item Attribute Value\",{\"parent\":attribute_list.attribute,\"attribute_value\":attribute_list.attribute_value,\"parenttype\":\"Item Attribute\"},\"abbr\")\n            if(\"colour\" in attribute_list.attribute.lower() or \"color\" in attribute_list.attribute.lower()):\n                color_abbr=abbr\n            elif(\"width\" in attribute_list.attribute.lower() or \"form\" in attribute_list.attribute.lower()):\n                size_abbr=abbr\n        res = str(doc.variant_of)+\"-\"+str(color_abbr)+\"-\"+str(size_abbr)\n        doc.item_code=res\n        doc.updated_item = 1",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Submit",
  "event_frequency": "All",
  "modified": "2022-03-09 10:50:28.294588",
  "name": "send_email_to_purchase_manager_on_submit_of_material_request",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Material Request",
  "script": "if doc.material_request_type==\"Material Transfer\":\n    email_template = frappe.get_doc('Email Template','Material Request Template')\n    submitted_by=frappe.db.get_value(\"User\",{\"name\":frappe.session.user},\"full_name\")\n    warehouse_manager = frappe.db.get_value(\"Warehouse\",{\"name\":doc.set_from_warehouse},\"warehouse_manager\")\n    if warehouse_manager : \n        manager_name = frappe.db.get_value(\"User\",{\"name\":warehouse_manager},\"full_name\")\n        frappe.sendmail(recipients=warehouse_manager,\n        subject=\"Material Request is Submitted Successfully\",\n        message=frappe.render_template(email_template.response_html, {'items':doc.items,'name':doc.name,'user_name':manager_name,'submitted_by':submitted_by}),\n                reference_doctype=doc.doctype,\n                reference_name=doc.name)",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Submit",
  "event_frequency": "All",
  "modified": "2022-04-12 16:49:19.955257",
  "name": "send_email_on_submission_of_blanket_order",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Blanket Order",
  "script": "def send_email_to_all_sales_manager(doc,email_template):\n    sales_manager_list=frappe.db.sql(\"\"\"select u.name,u.full_name as user_name\n    \t\tfrom `tabUser` u,`tabHas Role` r where\n    \t\tu.name=r.parent and u.enabled = 1 and r.role=\"Sales Manager\" \"\"\",as_dict=True)\n    submitted_by=frappe.db.get_value(\"User\",{\"name\":frappe.session.user},\"full_name\")\n    if sales_manager_list:\n        for row in  sales_manager_list:\n            if row.name != \"Administrator\":\n                frappe.sendmail(recipients=row.name,\n                subject=email_template.subject,\n                message=frappe.render_template(email_template.response_html, {'items':doc.items,'name':doc.name,'user_name':row.user_name,'submitted_by':submitted_by, 'customer_name':doc.customer}),\n                        reference_doctype=doc.doctype,\n                        reference_name=doc.name)\n                    \nemail_template = frappe.get_doc('Email Template','Blanket Order Template')\n\nfield_name=frappe.db.sql(\"\"\"SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS where TABLE_NAME=%s  and COLUMN_NAME=%s;\"\"\",('tabBlanket Order','branch'),as_list=True)\nif not field_name:\n    send_email_to_all_sales_manager(doc,email_template)\nelse:\n    if doc.branch!=None:\n        sales_manager_list=frappe.db.sql(\"\"\"select u.name,u.full_name as user_name from  `tabHas Role` r\n    \t\t\tRIGHT JOIN `tabUser` u\n    \t\t\ton u.name=r.parent\n    \t\t \tLEFT JOIN `tabBranch Details` b on\n    \t\t\tu.name=b.parent where b.branch= %(branch)s and r.role=\"Sales Manager\" and u.enabled = 1 \"\"\",{'branch':doc.branch},as_dict=True)\n        submitted_by=frappe.db.get_value(\"User\",{\"name\":frappe.session.user},\"full_name\")\n        if sales_manager_list:\n            for row in  sales_manager_list:\n                if row.name != \"Administrator\":\n                    frappe.sendmail(recipients=row.name,\n                    subject=email_template.subject,\n                    message=frappe.render_template(email_template.response_html, {'items':doc.items,'name':doc.name,'user_name':row.user_name,'submitted_by':submitted_by, 'customer_name':doc.customer}),\n                        reference_doctype=doc.doctype,\n                        reference_name=doc.name)\n    \n    else:\n        send_email_to_all_sales_manager(doc,email_template)\n",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": "get_sales_invoice",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2022-01-11 18:02:45.673564",
  "name": "Get Sales Invoice for Packing Slip",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "delivery_note=frappe.form_dict.get(\"delivery_note\")\ns_order= frappe.db.get_value(\"Delivery Note Item\",{\"parent\":delivery_note},\"against_sales_order\")\nsi_list=frappe.db.sql(\"\"\"select distinct parent from `tabSales Invoice Item` where sales_order=%(s_order)s or delivery_note = %(delivery_note)s\"\"\",{'s_order':s_order,'delivery_note':delivery_note},as_dict=True)\nfrappe.response['message']=si_list\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Save",
  "event_frequency": "All",
  "modified": "2022-01-11 18:02:53.875447",
  "name": "Send Email to Quality Manager",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Purchase Receipt",
  "script": "if doc.docstatus != 1:\n    def send_email_to_all_quality_user(doc,email_template):\n        quality_user_list=frappe.db.sql(\"\"\"select u.name,u.full_name as user_name\n        \t\tfrom `tabUser` u,`tabHas Role` r where\n        \t\tu.name=r.parent and u.enabled = 1 and r.role=\"Quality User\" \"\"\",as_dict=True)\n        if quality_user_list:\n            for row in  quality_user_list:\n                if row.name != \"Administrator\":\n                    frappe.sendmail(recipients=row.name,\n                    subject=email_template.subject,\n                    message=frappe.render_template(email_template.response_html, {'items': doc.items,'grn':doc.name,\"quality_user\":row.user_name}),\n                            reference_doctype=doc.doctype,\n                            reference_name=doc.name)\n                        \n    email_template = frappe.get_doc('Email Template','Purchase_receipt_QC_template')\n    \n    count = 0\n    for row in doc.items:\n        a = frappe.db.get_value(\"Item\",row.item_code,\"inspection_required_before_purchase\")\n        if a == 1:\n            count = count+1\n            \n            \n    if count > 0:\n        field_name=frappe.db.sql(\"\"\"SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS where TABLE_NAME=%s  and COLUMN_NAME=%s;\"\"\",('tabPurchase Receipt','branch'),as_list=True)\n        if not field_name:\n            send_email_to_all_quality_user(doc,email_template)\n        else:\n            if doc.branch!=None:\n                quality_user_list=frappe.db.sql(\"\"\"select u.name,u.full_name as user_name from  `tabHas Role` r\n            \t\t\tRIGHT JOIN `tabUser` u\n            \t\t\ton u.name=r.parent\n            \t\t \tLEFT JOIN `tabBranch Details` b on\n            \t\t\tu.name=b.parent where b.branch= %(branch)s and r.role=\"Quality User\" and u.enabled = 1 \"\"\",{'branch':doc.branch},as_dict=True)\n                if quality_user_list:\n                    for row in  quality_user_list:\n                        if row.name != \"Administrator\":\n                            frappe.sendmail(recipients=row.name,\n                            subject=email_template.subject,\n                            message=frappe.render_template(email_template.response_html, {'items': doc.items,'grn':doc.name,\"quality_user\":row.user_name}),\n                                reference_doctype=doc.doctype,\n                                reference_name=doc.name)\n            \n            else:\n                send_email_to_all_quality_user(doc,email_template)",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Save",
  "event_frequency": "All",
  "modified": "2022-01-11 18:03:02.643354",
  "name": "Send_email_to_manufacturing_manager",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Material Request",
  "script": "if doc.material_request_type == \"Manufacture\" and doc.workflow_state == \"Pending\":\n    def send_email_to_all_manufacture_manager(doc,email_template):\n        manufacture_manager_list=frappe.db.sql(\"\"\"select u.name,u.full_name as user_name\n        \t\tfrom `tabUser` u,`tabHas Role` r where\n        \t\tu.name=r.parent and u.enabled = 1 and r.role=\"Manufacturing Manager\" \"\"\",as_dict=True)\n        if manufacture_manager_list:\n            for row in  manufacture_manager_list:\n                if row.name != \"Administrator\":\n                    frappe.sendmail(recipients=row.name,\n                    subject=email_template.subject,\n                    message=frappe.render_template(email_template.response_html, {'doc': doc,'name':doc.name}),\n                            reference_doctype=doc.doctype,\n                            reference_name=doc.name)\n                            \n    email_template = frappe.get_doc('Email Template','Email to Manufacturing Manager')\n    \n    field_name=frappe.db.sql(\"\"\"SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS where TABLE_NAME=%s  and COLUMN_NAME=%s;\"\"\",('tabMaterial Request','branch'),as_list=True)\n    if not field_name:\n        send_email_to_all_manufacture_manager(doc,email_template)\n    else:\n        if doc.branch!=None:\n            quality_manager_list=frappe.db.sql(\"\"\"select u.name,u.full_name as user_name from  `tabHas Role` r\n        \t\t\tRIGHT JOIN `tabUser` u\n        \t\t\ton u.name=r.parent\n        \t\t \tLEFT JOIN `tabBranch Details` b on\n        \t\t\tu.name=b.parent where b.branch= %(branch)s and r.role=\"Manufacturing Manager\" and u.enabled = 1 \"\"\",{'branch':doc.branch},as_dict=True)\n            if quality_manager_list:\n                for row in  quality_manager_list:\n                    if row.name != \"Administrator\":\n                        frappe.sendmail(recipients=row.name,\n                        subject=email_template.subject,\n                        message=frappe.render_template(email_template.response_html, {'doc': doc,'name':doc.name}),\n                            reference_doctype=doc.doctype,\n                            reference_name=doc.name)\n        \n        else:\n            send_email_to_all_manufacture_manager(doc,email_template)",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2022-01-11 18:03:10.879969",
  "name": "add_financial_year_to_blanket_order",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Blanket Order",
  "script": "doc.financial_year = frappe.db.get_value(\"Fiscal Year\",{\"disabled\":0,\"year_start_date\":[\"<=\",frappe.utils.getdate()],\"year_end_date\":[\">=\",frappe.utils.getdate()]},\"year\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2022-01-11 18:03:18.840449",
  "name": "add_financial_year_to_quality_inspection",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Quality Inspection",
  "script": "doc.financial_year = frappe.db.get_value(\"Fiscal Year\",{\"disabled\":0,\"year_start_date\":[\"<=\",frappe.utils.getdate()],\"year_end_date\":[\">=\",frappe.utils.getdate()]},\"year\")\ndoc.branch_abbr = frappe.db.get_value(\"Branch\",{\"name\":doc.branch},\"abbr\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2022-01-11 18:03:27.224781",
  "name": "add_financial_year_to_production_plan",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Production Plan",
  "script": "doc.financial_year = frappe.db.get_value(\"Fiscal Year\",{\"disabled\":0,\"year_start_date\":[\"<=\",frappe.utils.getdate()],\"year_end_date\":[\">=\",frappe.utils.getdate()]},\"year\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2022-01-11 18:03:34.486713",
  "name": "add_financial_year_to_landed_cost_voucher",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Landed Cost Voucher",
  "script": "doc.financial_year = frappe.db.get_value(\"Fiscal Year\",{\"disabled\":0,\"year_start_date\":[\"<=\",frappe.utils.getdate()],\"year_end_date\":[\">=\",frappe.utils.getdate()]},\"year\")\ndoc.branch_abbr = frappe.db.get_value(\"Branch\",{\"name\":doc.branch},\"abbr\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2022-01-11 18:03:43.222833",
  "name": "add_financial_year_to_job_card",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Job Card",
  "script": "doc.branch_abbr = frappe.db.get_value(\"Branch\",{\"name\":doc.branch},\"abbr\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2022-01-11 18:03:51.400223",
  "name": "add_financial_year_to_asset",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Asset",
  "script": "doc.financial_year = frappe.db.get_value(\"Fiscal Year\",{\"disabled\":0,\"year_start_date\":[\"<=\",frappe.utils.getdate()],\"year_end_date\":[\">=\",frappe.utils.getdate()]},\"year\")\ndoc.branch_abbr = frappe.db.get_value(\"Branch\",{\"name\":doc.branch},\"abbr\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2022-01-11 18:03:59.584586",
  "name": "add_financial_year_to_journal_entry",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Journal Entry",
  "script": "doc.financial_year = frappe.db.get_value(\"Fiscal Year\",{\"disabled\":0,\"year_start_date\":[\"<=\",frappe.utils.getdate()],\"year_end_date\":[\">=\",frappe.utils.getdate()]},\"year\")\ndoc.branch_abbr = frappe.db.get_value(\"Branch\",{\"name\":doc.branch},\"abbr\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Save",
  "event_frequency": "All",
  "modified": "2022-04-12 18:56:58.604629",
  "name": "Check against transfer while doing GRN",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Purchase Receipt",
  "script": "if doc.is_subcontracted == 'Yes':\n    for item in doc.items:\n        qty = item.qty + item.rejected_qty\n        for row in frappe.db.get_list(\"Purchase Receipt Item\",{'purchase_order':item.purchase_order,'docstatus':1},'received_qty'):\n            qty = qty+row.received_qty\n        supplied_qty = frappe.db.get_value(\"Purchase Order Item Supplied\",{'parent':item.purchase_order,'rm_item_code':item.item_code},'supplied_qty')\n        if supplied_qty:\n            if float(supplied_qty) < qty:\n                frappe.throw(\"The received quantity cannot be greater then the issued quantity for item \" + str(item.item_code))",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": null,
  "modified": "2022-03-09 16:55:04.728994",
  "name": "add_financial_year_to_sales_invoice",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Sales Invoice",
  "script": "doc.financial_year = frappe.db.get_value(\"Fiscal Year\",{\"disabled\":0,\"year_start_date\":[\"<=\",frappe.utils.getdate()],\"year_end_date\":[\">=\",frappe.utils.getdate()]},\"year\")\ndoc.branch_abbr = frappe.db.get_value(\"Branch\",{\"name\":doc.branch},\"abbr\")\nif doc.is_consolidated and doc.is_return:\n    doc.naming_series = \"SIR/.financial_year./DL.####\"\n    \nif doc.is_return == 1 and doc.delivery_note:\n    doc.naming_series = \"SIR/.financial_year./.branch_abbr.####\"",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": null,
  "modified": "2022-03-24 12:57:40.816603",
  "name": "add_financial_year_to_purchase_order",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Purchase Order",
  "script": "doc.financial_year = frappe.db.get_value(\"Fiscal Year\",{\"disabled\":0,\"year_start_date\":[\"<=\",frappe.utils.getdate()],\"year_end_date\":[\">=\",frappe.utils.getdate()]},\"year\")\ndoc.branch_abbr = frappe.db.get_value(\"Branch\",{\"name\":doc.branch},\"abbr\")\n\nproject = ''\nfor row in doc.items:\n    if row.production_plan:\n        project = frappe.db.get_value(\"Production Plan\",{\"name\":row.production_plan},\"project\")\n        row.project = project\n        doc.project = project",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2022-03-24 05:07:09.262946",
  "name": "Add bank account to sales invoice",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Sales Invoice",
  "script": "if doc.is_pos ==1 and doc.branch:\n    default_bank_account = frappe.db.get_value(\"Bank Account\",{\"is_company_account\" : 1, \"branch\":doc.branch,\"is_default\":1},\"name\")\n    doc.bank_account = default_bank_account\n    if not default_bank_account:\n        bank_account = frappe.db.get_value(\"Bank Account\",{\"is_company_account\" : 1, \"branch\":doc.branch},\"name\")\n        doc.bank_account = bank_account",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": "set_company_branch_address",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2022-06-08 10:53:00.387689",
  "name": "set_company_branch_address",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Purchase Order Item",
  "script": "link_doctype = frappe.form_dict.get('link_doctype')\nlink_name = frappe.form_dict.get('link_name')\ncity=frappe.form_dict.get(\"city\")\n\nif city:\n    res = frappe.db.sql(\"\"\"\n                select a.name from `tabAddress` a\n                join `tabDynamic Link` dl \n                on dl.parent = a.name\n                where dl.parenttype = 'Address' and\n                dl.link_doctype = %s and\n                dl.link_name = %s and\n                a.city = %s and\n    \t\tifnull(a.disabled, 0) = 0 limit 1\n        \"\"\", (link_doctype,link_name,city),as_list=True)\n        \n    frappe.response['message'] = res\nelse:\n    res = frappe.db.sql(\"\"\"\n                select a.name from `tabAddress` a\n                join `tabDynamic Link` dl \n                on dl.parent = a.name\n                where dl.parenttype = 'Address' and\n                dl.link_doctype = %s and\n                dl.link_name = %s and\n    \t\tifnull(a.disabled, 0) = 0 limit 1\n        \"\"\", (link_doctype,link_name),as_list=True)\n        \n    frappe.response['message'] = res",
  "script_type": "API"
 }
]